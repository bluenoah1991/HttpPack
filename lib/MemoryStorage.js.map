{"version":3,"sources":["../src/MemoryStorage.js"],"names":["MemoryStorage","nid","itemsByIndex","messages","heap","a","b","isConfirmed","timestamp","Promise","resolve","packet","push","identifier","limit","packets","pop","undefined","updateItem","payload"],"mappings":";;;;;;;;AAAA;;;;;;;;IAEqBA,a;AACjB,6BAAa;AAAA;;AACT,aAAKC,GAAL,GAAW,CAAX;AACA,aAAKC,YAAL,GAAoB,EAApB;AACA,aAAKC,QAAL,GAAgB,EAAhB;AACA,aAAKC,IAAL,GAAY,mBAAS,UAASC,CAAT,EAAYC,CAAZ,EAAc;AAC/B,gBAAGD,EAAEE,WAAL,EAAiB;AACb,uBAAO,IAAP;AACH,aAFD,MAEO,IAAGD,EAAEC,WAAL,EAAiB;AACpB,uBAAO,KAAP;AACH;AACD,mBAAOF,EAAEG,SAAF,GAAcF,EAAEE,SAAvB;AACH,SAPW,CAAZ;AAQH;;;;qCAEW;AACR,mBAAOC,QAAQC,OAAR,CAAgB,EAAE,KAAKT,GAAvB,CAAP;AACH;;;mCAEUU,M,EAAO;AACd,iBAAKP,IAAL,CAAUQ,IAAV,CAAeD,MAAf;AACA,iBAAKT,YAAL,CAAkBS,OAAOE,UAAzB,IAAuCF,MAAvC;AACA,mBAAOF,QAAQC,OAAR,CAAgB,IAAhB,CAAP;AACH;;;0CAEiBI,K,EAAM;AACpB,gBAAIC,UAAU,EAAd;AACA,mBAAMD,QAAQ,CAAd,EAAgB;AACZ,oBAAIH,SAAS,KAAKP,IAAL,CAAUY,GAAV,EAAb;AACA,oBAAGL,UAAUM,SAAb,EAAuB;AACnB;AACH,iBAFD,MAEO,IAAGN,OAAOJ,WAAV,EAAsB;AACzB;AACH,iBAFM,MAEA;AACHQ,4BAAQH,IAAR,CAAaD,MAAb;AACAG;AACH;AACJ;AACD,mBAAOL,QAAQC,OAAR,CAAgBK,OAAhB,CAAP;AACH;;;sCAEaF,U,EAAW;AACrB,gBAAIF,SAAS,KAAKT,YAAL,CAAkBW,UAAlB,CAAb;AACA,gBAAGF,UAAUM,SAAb,EAAuB;AACnBN,uBAAOJ,WAAP,GAAqB,IAArB;AACA,qBAAKH,IAAL,CAAUc,UAAV,CAAqBP,MAArB;AACH;AACD,mBAAOF,QAAQC,OAAR,CAAgBC,MAAhB,CAAP;AACH;;;sCAEaE,U,EAAYM,O,EAAQ;AAC9B,iBAAKhB,QAAL,CAAcU,UAAd,IAA4BM,OAA5B;AACA,mBAAOV,QAAQC,OAAR,CAAgB,IAAhB,CAAP;AACH;;;sCAEaG,U,EAAW;AACrB,gBAAIM,UAAU,KAAKhB,QAAL,CAAcU,UAAd,CAAd;AACA,mBAAO,KAAKV,QAAL,CAAcU,UAAd,CAAP;AACA,mBAAOJ,QAAQC,OAAR,CAAgBS,OAAhB,CAAP;AACH;;;;;;kBA3DgBnB,a","file":"MemoryStorage.js","sourcesContent":["import Heap from 'heap';\n\nexport default class MemoryStorage{\n    constructor(){\n        this.nid = 0;\n        this.itemsByIndex = {};\n        this.messages = {};\n        this.heap = new Heap(function(a, b){\n            if(a.isConfirmed){\n                return true;\n            } else if(b.isConfirmed){\n                return false;\n            }\n            return a.timestamp > b.timestamp;\n        });\n    }\n\n    generateId(){\n        return Promise.resolve(++this.nid);\n    }\n\n    savePacket(packet){\n        this.heap.push(packet);\n        this.itemsByIndex[packet.identifier] = packet;\n        return Promise.resolve(null);\n    }\n\n    unconfirmedPacket(limit){\n        let packets = [];\n        while(limit > 0){\n            let packet = this.heap.pop();\n            if(packet == undefined){\n                break;\n            } else if(packet.isConfirmed){\n                continue;\n            } else {\n                packets.push(packet);\n                limit--;\n            }\n        }\n        return Promise.resolve(packets);\n    }\n\n    confirmPacket(identifier){\n        let packet = this.itemsByIndex[identifier];\n        if(packet != undefined){\n            packet.isConfirmed = true;\n            this.heap.updateItem(packet);\n        }\n        return Promise.resolve(packet);\n    }\n\n    receivePacket(identifier, payload){\n        this.messages[identifier] = payload;\n        return Promise.resolve(null);\n    }\n\n    releasePacket(identifier){\n        let payload = this.messages[identifier];\n        delete this.messages[identifier];\n        return Promise.resolve(payload);\n    }\n}"]}