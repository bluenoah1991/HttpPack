{"version":3,"sources":["../src/MemoryStorage.js"],"names":["MemoryStorage","uid","__packs__","index","heap","a","b","confirm","timestamp","undefined","msg_id","msgs","pack","push","limit","packs","pop","updateItem","payload","msg"],"mappings":";;;;;;;;AAAA;;;;;;;;IAEqBA,a;AACjB,6BAAa;AAAA;;AACT,aAAKC,GAAL,GAAW,CAAX;AACA,aAAKC,SAAL,GAAiB,EAAjB;AACA,aAAKC,KAAL,GAAa,EAAb;AACA,aAAKC,IAAL,GAAY,mBAAS,UAASC,CAAT,EAAYC,CAAZ,EAAc;AAC/BD,cAAEE,OAAF,GAAYF,EAAEE,OAAF,IAAa,KAAzB;AACAD,cAAEC,OAAF,GAAYD,EAAEC,OAAF,IAAa,KAAzB;AACA,gBAAGF,EAAEE,OAAF,IAAa,CAACD,EAAEC,OAAnB,EAA2B;AACvB,uBAAO,IAAP;AACH,aAFD,MAEO,IAAG,CAACF,EAAEE,OAAH,IAAcD,EAAEC,OAAnB,EAA2B;AAC9B,uBAAO,KAAP;AACH;AACD,gBAAGF,EAAEG,SAAF,IAAeC,SAAf,IAA4BH,EAAEE,SAAF,IAAeC,SAA9C,EAAwD;AACpD,uBAAO,IAAP;AACH,aAFD,MAEO,IAAGJ,EAAEG,SAAF,IAAeC,SAAf,IAA4BH,EAAEE,SAAF,IAAeC,SAA9C,EAAwD;AAC3D,uBAAO,KAAP;AACH,aAFM,MAEA,IAAGJ,EAAEG,SAAF,IAAeC,SAAf,IAA4BH,EAAEE,SAAF,IAAeC,SAA9C,EAAwD;AAC3D,uBAAOJ,EAAEK,MAAF,GAAWJ,EAAEI,MAApB;AACH;AACD,mBAAOL,EAAEG,SAAF,GAAcF,EAAEE,SAAvB;AACH,SAhBW,CAAZ;AAiBA,aAAKG,IAAL,GAAY,EAAZ;AACH;;AAED;;;;;mCACU;AACN,mBAAO,EAAE,KAAKV,GAAd;AACH;;AAED;;;;6BACKW,I,EAAK;AACNA,iBAAKL,OAAL,GAAe,KAAf;AACA,iBAAKH,IAAL,CAAUS,IAAV,CAAeD,IAAf;AACA,iBAAKT,KAAL,CAAWS,KAAKF,MAAhB,IAA0BE,IAA1B;AACH;;AAED;;;;oCACYE,K,EAAM;AACd,gBAAIC,QAAQ,EAAZ;AACA,mBAAMD,QAAQ,CAAd,EAAgB;AACZ,oBAAIF,OAAO,KAAKR,IAAL,CAAUY,GAAV,EAAX;AACA,oBAAGJ,QAAQH,SAAX,EAAqB;AACjB;AACH,iBAFD,MAEO,IAAGG,KAAKL,OAAR,EAAgB;AACnB;AACH,iBAFM,MAEA;AACHQ,0BAAMF,IAAN,CAAWD,IAAX;AACAE;AACH;AACJ;AACD,mBAAOC,KAAP;AACH;;AAED;;;;gCACQL,M,EAAO;AACX,gBAAIE,OAAO,KAAKT,KAAL,CAAWO,MAAX,CAAX;AACA,gBAAGE,QAAQH,SAAX,EAAqB;AACjBG,qBAAKL,OAAL,GAAe,IAAf;AACA,qBAAKH,IAAL,CAAUa,UAAV,CAAqBL,IAArB;AACH;AACD,mBAAOA,IAAP;AACH;;AAED;;;;gCACQF,M,EAAQQ,O,EAAQ;AACpB,iBAAKP,IAAL,CAAUD,MAAV,IAAoBQ,OAApB;AACH;;AAED;;;;gCACQR,M,EAAO;AACX,gBAAIS,MAAM,KAAKR,IAAL,CAAUD,MAAV,CAAV;AACA,mBAAO,KAAKC,IAAL,CAAUD,MAAV,CAAP;AACA,mBAAOS,GAAP;AACH;;;;;;kBA1EgBnB,a","file":"MemoryStorage.js","sourcesContent":["import Heap from 'heap';\n\nexport default class MemoryStorage{\n    constructor(){\n        this.uid = 0;\n        this.__packs__ = [];\n        this.index = {};\n        this.heap = new Heap(function(a, b){\n            a.confirm = a.confirm || false;\n            b.confirm = b.confirm || false;\n            if(a.confirm && !b.confirm){\n                return true;\n            } else if(!a.confirm && b.confirm){\n                return false;\n            }\n            if(a.timestamp == undefined && b.timestamp != undefined){\n                return true;\n            } else if(a.timestamp != undefined && b.timestamp == undefined){\n                return false;\n            } else if(a.timestamp == undefined && b.timestamp == undefined){\n                return a.msg_id > b.msg_id;\n            }\n            return a.timestamp > b.timestamp;\n        });\n        this.msgs = {};\n    }\n\n    // generate global unique id\n    uniqueId(){\n        return ++this.uid;\n    }\n\n    // insert pack and set timestamp\n    save(pack){\n        pack.confirm = false;\n        this.heap.push(pack);\n        this.index[pack.msg_id] = pack;\n    }\n\n    // fetch up to limit unconfirmed packs\n    unconfirmed(limit){\n        let packs = [];\n        while(limit > 0){\n            let pack = this.heap.pop();\n            if(pack == undefined){\n                break;\n            } else if(pack.confirm){\n                continue;\n            } else {\n                packs.push(pack);\n                limit--;\n            }\n        }\n        return packs;\n    }\n\n    // confirm and return message\n    confirm(msg_id){\n        let pack = this.index[msg_id];\n        if(pack != undefined){\n            pack.confirm = true;\n            this.heap.updateItem(pack);\n        }\n        return pack;\n    }\n\n    // receive and storage message\n    receive(msg_id, payload){\n        this.msgs[msg_id] = payload;\n    }\n\n    // release and delete message\n    release(msg_id){\n        let msg = this.msgs[msg_id];\n        delete this.msgs[msg_id];\n        return msg;\n    }\n}"]}