{"version":3,"sources":["../src/MemoryStorage.js"],"names":["MemoryStorage","uid","__packs__","index","heap","a","b","confirm","timestamp","undefined","msg_id","msgs","pack","push","limit","packs","pop","updateItem","payload","msg"],"mappings":";;;;;;;;AAAA;;;;;;;;IAEqBA,a;AACjB,6BAAa;AAAA;;AACT,aAAKC,GAAL,GAAW,CAAX;AACA,aAAKC,SAAL,GAAiB,EAAjB;AACA,aAAKC,KAAL,GAAa,EAAb;AACA,aAAKC,IAAL,GAAY,mBAAS,UAASC,CAAT,EAAYC,CAAZ,EAAc;AAC/BD,cAAEE,OAAF,GAAYF,EAAEE,OAAF,IAAa,KAAzB;AACAD,cAAEC,OAAF,GAAYD,EAAEC,OAAF,IAAa,KAAzB;AACA,gBAAGF,EAAEE,OAAF,IAAa,CAACD,EAAEC,OAAnB,EAA2B;AACvB,uBAAO,IAAP;AACH,aAFD,MAEO,IAAG,CAACF,EAAEE,OAAH,IAAcD,EAAEC,OAAnB,EAA2B;AAC9B,uBAAO,KAAP;AACH;AACD,gBAAGF,EAAEG,SAAF,IAAeC,SAAf,IAA4BH,EAAEE,SAAF,IAAeC,SAA9C,EAAwD;AACpD,uBAAO,IAAP;AACH,aAFD,MAEO,IAAGJ,EAAEG,SAAF,IAAeC,SAAf,IAA4BH,EAAEE,SAAF,IAAeC,SAA9C,EAAwD;AAC3D,uBAAO,KAAP;AACH,aAFM,MAEA,IAAGJ,EAAEG,SAAF,IAAeC,SAAf,IAA4BH,EAAEE,SAAF,IAAeC,SAA9C,EAAwD;AAC3D,uBAAOJ,EAAEK,MAAF,GAAWJ,EAAEI,MAApB;AACH;AACD,mBAAOL,EAAEG,SAAF,GAAcF,EAAEE,SAAvB;AACH,SAhBW,CAAZ;AAiBA,aAAKG,IAAL,GAAY,EAAZ;AACH;;AAED;;;;;mCACU;AACN,mBAAO,EAAE,KAAKV,GAAd;AACH;;AAED;;;;6BACKW,I,EAAK;AACNA,iBAAKL,OAAL,GAAe,KAAf;AACA,iBAAKH,IAAL,CAAUS,IAAV,CAAeD,IAAf;AACA,iBAAKT,KAAL,CAAWS,KAAKF,MAAhB,IAA0BE,IAA1B;AACH;;AAED;;;;oCACYE,K,EAAM;AACd,gBAAIC,QAAQ,EAAZ;AACA,mBAAMD,QAAQ,CAAd,EAAgB;AACZ,oBAAIF,OAAO,KAAKR,IAAL,CAAUY,GAAV,EAAX;AACA,oBAAGJ,QAAQH,SAAX,EAAqB;AACjB;AACH,iBAFD,MAEO,IAAGG,KAAKL,OAAR,EAAgB;AACnB;AACH,iBAFM,MAEA;AACHQ,0BAAMF,IAAN,CAAWD,IAAX;AACAE;AACH;AACJ;AACD,mBAAOC,KAAP;AACH;;AAED;;;;gCACQL,M,EAAO;AACX,gBAAIE,OAAO,KAAKT,KAAL,CAAWO,MAAX,CAAX;AACA,gBAAGE,QAAQH,SAAX,EAAqB;AACjBG,qBAAKL,OAAL,GAAe,IAAf;AACA,qBAAKH,IAAL,CAAUa,UAAV,CAAqBL,IAArB;AACH;AACD,mBAAOA,IAAP;AACH;;AAED;;;;gCACQF,M,EAAQQ,O,EAAQ;AACpB,iBAAKP,IAAL,CAAUD,MAAV,IAAoBQ,OAApB;AACH;;AAED;;;;gCACQR,M,EAAO;AACXS,kBAAM,KAAKR,IAAL,CAAUD,MAAV,CAAN;AACA,mBAAO,KAAKC,IAAL,CAAUD,MAAV,CAAP;AACA,mBAAOS,GAAP;AACH;;;;;;kBA1EgBnB,a","file":"MemoryStorage.js","sourcesContent":["import Heap from 'heap';\r\n\r\nexport default class MemoryStorage{\r\n    constructor(){\r\n        this.uid = 0;\r\n        this.__packs__ = [];\r\n        this.index = {};\r\n        this.heap = new Heap(function(a, b){\r\n            a.confirm = a.confirm || false;\r\n            b.confirm = b.confirm || false;\r\n            if(a.confirm && !b.confirm){\r\n                return true;\r\n            } else if(!a.confirm && b.confirm){\r\n                return false;\r\n            }\r\n            if(a.timestamp == undefined && b.timestamp != undefined){\r\n                return true;\r\n            } else if(a.timestamp != undefined && b.timestamp == undefined){\r\n                return false;\r\n            } else if(a.timestamp == undefined && b.timestamp == undefined){\r\n                return a.msg_id > b.msg_id;\r\n            }\r\n            return a.timestamp > b.timestamp;\r\n        });\r\n        this.msgs = {};\r\n    }\r\n\r\n    // generate global unique id\r\n    uniqueId(){\r\n        return ++this.uid;\r\n    }\r\n\r\n    // insert pack and set timestamp\r\n    save(pack){\r\n        pack.confirm = false;\r\n        this.heap.push(pack);\r\n        this.index[pack.msg_id] = pack;\r\n    }\r\n\r\n    // fetch up to limit unconfirmed packs\r\n    unconfirmed(limit){\r\n        let packs = [];\r\n        while(limit > 0){\r\n            let pack = this.heap.pop();\r\n            if(pack == undefined){\r\n                break;\r\n            } else if(pack.confirm){\r\n                continue;\r\n            } else {\r\n                packs.push(pack);\r\n                limit--;\r\n            }\r\n        }\r\n        return packs;\r\n    }\r\n\r\n    // confirm and return message\r\n    confirm(msg_id){\r\n        let pack = this.index[msg_id];\r\n        if(pack != undefined){\r\n            pack.confirm = true;\r\n            this.heap.updateItem(pack);\r\n        }\r\n        return pack;\r\n    }\r\n\r\n    // receive and storage message\r\n    receive(msg_id, payload){\r\n        this.msgs[msg_id] = payload;\r\n    }\r\n\r\n    // release and delete message\r\n    release(msg_id){\r\n        msg = this.msgs[msg_id];\r\n        delete this.msgs[msg_id];\r\n        return msg;\r\n    }\r\n}"]}